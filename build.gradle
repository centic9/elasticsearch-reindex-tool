
buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.1"
  }
}

plugins {
  id 'java'
  id 'application'
  id 'maven-publish'
  id 'pl.allegro.tech.build.axion-release' version '1.2.4'
  id "com.bmuschko.nexus" version "2.3.1"
  id 'com.github.kt3k.coveralls' version '2.3.1'
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'eclipse'
apply plugin: 'application'

sourceCompatibility = 1.8
project.group = 'pl.allegro.yukon'
mainClassName = "pl.allegro.tech.search.elasticsearch.tools.reindex.ReindexAction"
version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Elasticsearch Reindexing Tool', 'Implementation-Version': version
    }
}

scmVersion {
  tag {
    prefix = 'elasticsearch-reindex-tool'
  }
}

project.version = scmVersion.version

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.elasticsearch:elasticsearch:2.1.0'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'ch.qos.logback:logback-classic:1.0.13'
    compile 'com.beust:jcommander:1.30'
    compile 'com.google.guava:guava:18.0'
    compile 'org.apache.commons:commons-collections4:4.0'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'cglib:cglib:3.1'
    testCompile 'com.jayway.awaitility:awaitility:1.6.3'
    testCompile 'org.assertj:assertj-core:2.0.0'
    testCompile 'pl.pragmatists:JUnitParams:1.0.4'
    testCompile 'eu.codearte.catch-exception:catch-exception:1.4.4'
}

// work around unnecessary timestamp in generated file which always causes dirty files in version control
// https://issues.gradle.org/browse/GRADLE-2293
task adjustEclipseSettingsFile << {
   ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
      fileset(dir: project.projectDir, includes: '.settings/org.eclipse.jdt.core.prefs')
   }
}
task sortEclipseSettingsFile << {
   new File(project.projectDir, '.settings/org.eclipse.jdt.core.prefs').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
   new File(project.projectDir, '.classpath').with { it.text = it.readLines().findAll { it }.unique().join('\n') }
}
eclipseJdt.finalizedBy adjustEclipseSettingsFile
eclipseJdt.finalizedBy sortEclipseSettingsFile

tasks.withType(JavaCompile) {
	// avoid: :compileJavawarning: [options] bootstrap class path not set in conjunction with -source 1.7
	options.warnings = false
	options.compilerArgs = [ '-Xlint:deprecation' ]
    options.encoding = 'UTF-8'
}

jar {
  manifest {
    attributes(
        'Main-Class': mainClassName)
  }
}

nexusStaging {
  packageGroup = "pl.allegro"
}

modifyPom {
  project {
    name 'Elasticsearch reindex tool'
    description 'Elasticsearch reindex tool provides easy way to rebuild indexes'
    url 'https://github.com/allegro/elasticsearch-reindex-tool'
    inceptionYear '2015'

    scm {
      url 'https://github.com/allegro/elasticsearch-reindex-tool'
      connection 'scm:git@github.com:allegro/elasticsearch-reindex-tool.git'
      developerConnection 'scm:git@github.com:allegro/elasticsearch-reindex-tool.git'
    }

    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      }
    }

    developers {
      developer {
        id 'awislowski'
        name 'Andrzej WisÅ‚owski'
      }
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.9'
}